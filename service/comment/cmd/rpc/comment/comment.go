// Code generated by goctl. DO NOT EDIT.
// Source: comment.proto

package comment

import (
	"context"

	"forum/service/comment/cmd/rpc/pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CreateCommentReq  = pb.CreateCommentReq
	CreateCommentResp = pb.CreateCommentResp
	ShowCommentReq    = pb.ShowCommentReq
	ShowCommentResp   = pb.ShowCommentResp

	Comment interface {
		// 创建评论
		CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error)
		// 展示评论
		ShowComment(ctx context.Context, in *ShowCommentReq, opts ...grpc.CallOption) (*ShowCommentResp, error)
	}

	defaultComment struct {
		cli zrpc.Client
	}
)

func NewComment(cli zrpc.Client) Comment {
	return &defaultComment{
		cli: cli,
	}
}

// 创建评论
func (m *defaultComment) CreateComment(ctx context.Context, in *CreateCommentReq, opts ...grpc.CallOption) (*CreateCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.CreateComment(ctx, in, opts...)
}

// 展示评论
func (m *defaultComment) ShowComment(ctx context.Context, in *ShowCommentReq, opts ...grpc.CallOption) (*ShowCommentResp, error) {
	client := pb.NewCommentClient(m.cli.Conn())
	return client.ShowComment(ctx, in, opts...)
}
